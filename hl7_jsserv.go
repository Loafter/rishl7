package main

import "net/http"
import "strconv"

import "encoding/json"
import "errors"
import "io/ioutil"
import "log"

import "encoding/base64"

const htmlData = ""

//main srv class
type HL7Js struct {
	hl7c HL7Client
}

//start and init srv
func (srv *HL7Js) Start(listenPort int) error {
	http.HandleFunc("/sendadt01", srv.SendADTA01)
	http.HandleFunc("/", srv.Redirect)
	http.HandleFunc("/index.html", srv.index)
	if err := http.ListenAndServe(":"+strconv.Itoa(listenPort), nil); err != nil {
		return errors.New("error: can't start listen http server")
	}
	return nil
}

//serve main page request
func (srv *HL7Js) index(rwr http.ResponseWriter, req *http.Request) {
	rwr.Header().Set("Content-Type: text/html", "*")

	content, err := ioutil.ReadFile("index.html")
	if err != nil {
		log.Println("warning: start page not found, return included page")
		val, _ := base64.StdEncoding.DecodeString(htmlData)
		rwr.Write(val)
		return
	}
	rwr.Write(content)
}

func (service *HL7Js) Redirect(responseWriter http.ResponseWriter, request *http.Request) {
	http.Redirect(responseWriter, request, "/index.html", 301)
}

//serve cEcho responce
func (srv *HL7Js) SendADTA01(rwr http.ResponseWriter, req *http.Request) {
	defer req.Body.Close()
	bodyData, err := ioutil.ReadAll(req.Body)
	if err != nil {
		strErr := "error: Can't read http body data"
		http.Error(rwr, err.Error(), http.StatusInternalServerError)
		log.Println(strErr)
		return
	}
	var adtreq ADT01Req
	if err := json.Unmarshal(bodyData, &adtreq); err != nil {
		strErr := "error: can't parse ADT01Req data"
		http.Error(rwr, err.Error(), http.StatusInternalServerError)
		log.Println(strErr)
		return
	}

	log.Println(adtreq)
	redat, err := srv.hl7c.ADTA01(adtreq.Pd, adtreq.Hl7c)
	if err != nil {
		log.Println(err)
		http.Error(rwr, err.Error(), http.StatusInternalServerError)
		return

	}
	rwr.Write(redat)
}
